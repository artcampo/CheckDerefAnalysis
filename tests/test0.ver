static volatile bool b;
int main(){
  int c, d; 
  if(b) c = 1; else d = 2;
  return 0;
}
NullPtrCheckAfterDereference,
CFG: 
 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: return 0;
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1: d
   2: [B2.1] = 2
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: c
   2: [B3.1] = 1
   Preds (1): B4
   Succs (1): B1

 [B4]
   1: int c;
   2: int d;
   3: b
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B4.4]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1


Enqeue block with ID=5
Block with ID=5
Block with ID=4
DeclRefExpr 0x563c048c7c38 'volatile _Bool' lvalue Var 0x563c048c7958 'b' 'volatile _Bool'
Block with ID=2
DeclRefExpr 0x563c048c7ce8 'int' lvalue Var 0x563c048c7ba8 'd' 'int'
BinaryOperator 0x563c048c7d30 'int' lvalue '='
|-DeclRefExpr 0x563c048c7ce8 'int' lvalue Var 0x563c048c7ba8 'd' 'int'
`-IntegerLiteral 0x563c048c7d10 'int' 2
Block with ID=3
DeclRefExpr 0x563c048c7c78 'int' lvalue Var 0x563c048c7b30 'c' 'int'
BinaryOperator 0x563c048c7cc0 'int' lvalue '='
|-DeclRefExpr 0x563c048c7c78 'int' lvalue Var 0x563c048c7b30 'c' 'int'
`-IntegerLiteral 0x563c048c7ca0 'int' 1
Block with ID=1
Block with ID=0
